@page "/login"
@using BlazorUsers.ApiConnect.Model
@using BlazorUsers.ApiConnect
@inject ApiRequests ApiRequests
@inject NavigationManager NavigationManager

<div class="container">
    <div class="row justify-content-center align-items-center" style="min-height: 100vh;">
        <div class="col-md-4">
            <div class="card shadow">
                <div class="card-body">
                    <h3 class="text-center">Авторизация</h3>

                    @if (loginFailed)
                    {
                        <div class="alert alert-danger">Неверный логин или пароль.</div>
                    }

                    <EditForm Model="userLogin" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <label>Email:</label>
                            <InputText class="form-control" @bind-Value="userLogin.Email" placeholder="Введите ваш email" />
                        </div>
                        <div class="form-group">
                            <label>Пароль:</label>
                            <InputText class="form-control" @bind-Value="userLogin.Password" type="password" placeholder="Введите ваш пароль" />
                        </div>
                        <button type="submit" class="btn btn-primary btn-block">Войти</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private AuthorizationUser userLogin = new AuthorizationUser();
    private bool loginFailed = false;

    private async Task HandleLogin()
    {
        // loginFailed = !await ApiRequests.Authorization(userLogin.Email, userLogin.Password);
        if (loginFailed)
        {
            NavigationManager.NavigateTo("/users");
        }
    }
}